{"version":3,"sources":["MessageAuthor.js","MessageText.js","MessageTime.js","Message.js","User.js","Users.js","Room.js","Sender.js","Convo.js","App.js","serviceWorker.js","exampleData.js","index.js","logo.svg"],"names":["MessageAuthorDiv","styled","div","MessageAuthor","props","name","MessageTextDiv","MessageText","text","MessageTimeDiv","MessageTime","className","date","Date","getTime","toTimeString","split","slice","join","MessageDiv","type","Message","author","UserDiv","User","console","log","UsersDiv","Users","users","map","u","key","id","cuser","firstName","RoomDiv","RoomNameDiv","Room","room","length","SenderDiv","TextDiv","Sender","React","useState","setText","label","variant","inputProps","onChange","e","target","value","onClick","onSend","ConvoDiv","MessagesDiv","Convo","messages","data","messageData","window","postMessage","message","parent","App","setData","useEffect","addEventListener","msg","prevdata","push","Boolean","location","hostname","match","ReactDOM","render","exampleData","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e0e1d7f3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst MessageAuthorDiv = styled.div`\n   display:flex;\n   align-self:flex-start;\n   font-size:0.8em;\n   font-weight:bold;\n   color:purple;\n`;\n\nMessageAuthor.propTypes = {\n name: PropTypes.string\n};\n\nfunction MessageAuthor(props) {\n return (\n  <MessageAuthorDiv>\n   {props.name}\n  </MessageAuthorDiv>\n );\n}\n\nexport default MessageAuthor;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst MessageTextDiv = styled.div`\n   display:flex;\n   padding:5px;\n`;\n\nMessageText.propTypes = {\n text: PropTypes.string\n};\n\nfunction MessageText(props) {\n return (\n  <MessageTextDiv>\n   {props.text}\n  </MessageTextDiv>\n );\n}\n\nexport default MessageText;","import React from 'react';\nimport styled from 'styled-components';\n\nconst MessageTimeDiv = styled.div`\n   display:flex;\n   align-self:flex-end;\n   font-size:0.7em;\n   padding:4px;\n`;\n\nconst format = (date) => {\n  return new Date(date.getTime()).toTimeString().split(' ')[0].split(':').slice(0, 2).join(':');\n};\n\nfunction MessageTime(props) {\n  return (\n    <MessageTimeDiv className=\"MessageTime\">\n     {format(props.date)}\n    </MessageTimeDiv>\n  );\n}\n\nexport default MessageTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport MessageAuthor from './MessageAuthor';\nimport MessageText from './MessageText';\nimport MessageTime from './MessageTime';\n\nconst MessageDiv = styled.div`\n   padding:6px;\n   margin:4px 10px;\n   display:flex;\n   align-items: center;\n   background:${props => {return props.type === 'own' ? '#dcf8c6' : 'whiteSmoke' }};\n   border-radius: 5px;\n   align-self: ${props => {return props.type === 'own' ? 'flex-end' : 'flex-start'; }};\n   flex-direction:column;\n`;\n\nMessage.propTypes = {\n type: PropTypes.string,\n text: PropTypes.string,\n author: PropTypes.string,\n date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string])\n};\n\nfunction Message(props) {\n return (\n  <MessageDiv {...props}>\n   <MessageAuthor name={props.author} />\n   <MessageText text={props.text} />\n   <MessageTime date={new Date(props.date)} />\n  </MessageDiv>\n );\n}\n\nexport default Message;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst UserDiv = styled.div`\n   display:flex;\n   font-size:0.8em;\n   padding:0px 2px;\n`;\n\nUser.propTypes = {\n name: PropTypes.string,\n};\n\nfunction User(props) {\n \n console.log('rendering user', props.name);\n\n return (\n  <UserDiv>\n   {props.name}\n  </UserDiv>\n );\n}\n\nexport default User;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport styled from 'styled-components';\n\nconst UsersDiv = styled.div`\n   display:flex;\n   font-size:0.9em;\n   padding:4px;\n`;\n\nUsers.propTypes = {\n users: PropTypes.array,\n cuser: PropTypes.object\n};\n\nfunction Users(props) {\n const users = props.users.map(u=>{\n  return (<User key={u.id} name={props.cuser.id === u.id ? 'You' : u.firstName} />);\n });\n\n return (\n  <UsersDiv>\n   {users}\n  </UsersDiv>\n );\n}\n\nexport default Users;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Users from './Users';\nimport styled from 'styled-components';\n\nconst RoomDiv = styled.div`\n   display:flex;\n   flex-direction:column;\n   height:50px;\n   background:#eee;\n   padding:4px;\n`;\n\nconst RoomNameDiv = styled.div`\n   display:flex;\n   font-size:1em;\n   padding:4px;\n`;\n\nRoom.propTypes = {\n room: PropTypes.string,\n users: PropTypes.array,\n cuser: PropTypes.object\n};\n\nfunction Room(props) {\n\n console.log('rendering room', props.room, props.users.length);\n\n return (\n  <RoomDiv>\n   <RoomNameDiv>{props.room}</RoomNameDiv>\n   <Users users={props.users} cuser={props.cuser} />\n  </RoomDiv>\n );\n}\n\nexport default Room;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\n\nconst SenderDiv = styled.div`\n   display:flex;\n   padding:8px;\n   background:#eee;\n   .MuiButtonBase-root {\n      padding:0px;\n      align-items:center;\n      justify-content:center;\n   }\n   .MuiButton-label {\n      display:flex;\n      align-items:center;\n      justify-content:center;\n      color:purple;\n   }\n\n   border-bottom:3px solid #888;\n`;\n\nconst TextDiv = styled.div`\n  display:flex;\n  flex:1;\n  .textfield {\n     justify-content:center;\n\n     flex:1;\n  }\n  .theinput {\n     flex:1;\n     padding:6px;\n  }\n  .textfield label {\n     font-size:0.8em;\n  }\n  .textfield label[data-shrink='false'] {\n   transform: translate(11px, 14px) scale(1);\n  }\n`;\n\nSender.propTypes = {\n   onSend: PropTypes.func\n};\n\nfunction Sender(props) {\n   const [text,setText] = React.useState(null);\n   \n   return (\n      <SenderDiv>\n         <TextDiv>\n            <TextField id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" inputProps={{className:'theinput'}}\n               className=\"textfield\"\n               onChange={(e) => { setText(e.target.value); }} />\n         </TextDiv>\n         <Button onClick={(e) => { props.onSend(text) }}>\n            <SendIcon></SendIcon>\n         </Button>\n      </SenderDiv>\n   );\n}\n\nexport default Sender;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Message from './Message';\nimport Room from './Room';\nimport Sender from './Sender';\n\nconst ConvoDiv = styled.div`\n   max-width:320px;\n   min-width:320px;\n   display:flex;\n   flex-direction: column;\n   flex:1;\n   min-height: 0px;\n`;\n\nconst MessagesDiv = styled.div`\n   background:#ccc;\n   display:flex;\n   flex-direction: column;\n   flex:1;\n   overflow:auto;\n`;\n\n\nConvo.propTypes = {\n   data: PropTypes.object,\n};\n\nfunction Convo(props) {\n   const messages = props.data.messages.map((messageData) => {\n      return (<Message key={messageData.id} {...messageData} />)\n   })\n   \n   console.log('rendering convo', messages.length);\n\n   return (\n      <ConvoDiv>\n         <Room room={props.data.room} users={props.data.users} cuser={props.data.cuser} />\n         <MessagesDiv>{messages}</MessagesDiv>\n         <Sender onSend={(data) => {\n            window.postMessage({ type: 'single', message: data}, '*');\n            if (window.parent && window.parent !== window) {\n               window.parent.postMessage({ type: 'single', message: data }, '*');\n            }\n         }} />\n      </ConvoDiv>\n   );\n}\n\nexport default Convo;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Convo from './Convo'\n\nfunction App(props) {\n  let [data, setData] = React.useState(props.data);\n\n  React.useEffect(()=>{\n    window.addEventListener(\"message\", (msg) => {\n      if (msg.data) {\n        if (msg.data.type === 'single') {\n          console.log('got single message', msg.data);\n          setData(prevdata => {\n             let {messages} = (prevdata || {messages: []});\n             messages.push({\n              id: `tmp${(new Date()).getTime()}`, type: 'own', text: msg.data.message,\n              author: prevdata.cuser.firstName, date: new Date()\n            });\n            let newdata = {...data, messages};\n             return newdata;\n            });\n        }\n        else if (msg.data.messages) { // update all / replace\n          console.log('got update message', msg.data);\n          setData(data => ({...msg.data}));\n        }\n      }\n    }, false);    \n  },[]);\n\n  if (!data) {\n    return null;\n  }\n\n  console.log('rendering app...', data.messages && data.messages.length);\n\n  return (\n    <Convo data={data} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n room: 'my room',\n cuser: {id: 1, firstName: 'ayal'},\n users:[{id: 1, firstName: 'ayal'}, {id: 9, firstName: 'max'}, {id: 2, firstName: 'lux'}],\n messages: [\n {type:\"normal\", id:1, text: 'lala', author: 'kuki', date: new Date() },\n {type:\"own\", id:2,  text: 'lasdfgsdfla', author: 'kuki', date: new Date() },\n {type:\"normal\", id:3, text: 'lala', author: 'kuki', date: new Date() }\n]};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport exampleData from './exampleData';\n\nReactDOM.render(<App data={exampleData} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}